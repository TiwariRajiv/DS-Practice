//DFS
class Solution {

    private void dfs(int i, int[][] isConnected, boolean[] visited) {
        if (visited[i]) {
            return;
        }
        visited[i] = true;
        for (int j=0; j<isConnected[i].length; j++) {
            if (isConnected[i][j] == 1) {
                dfs(j, isConnected, visited);
            }
        }
    }

    public int findCircleNum(int[][] isConnected) {
        int n = isConnected.length;
        int count = 0;
        boolean[] visited = new boolean[n];
        Arrays.fill(visited, false);
        for (int i=0; i<n; i++) {
            if (!visited[i]) {
                count++;
                dfs(i, isConnected, visited);
            }
        }
        return count;
    }
}
