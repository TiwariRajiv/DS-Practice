//https://leetcode.com/problems/longest-palindromic-substring/

class Solution {
public:
    string longestPalindrome(string str) {
        int n = str.length();
        bool dp[n][n];
        
        memset(dp, false, sizeof(dp));
        
        int start=0, maxlen=1;
        //start with length 1
        for(int i=0; i<n; i++)
            dp[i][i] = true;
        
        //length with 2
        for(int i=0; i<n-1; i++) {
            if(str[i] == str[i+1]) {
                dp[i][i+1] = true;
                start = i;
                maxlen = 2;
            }
        }
        
        //length >= 3
        for(int k=3; k<=n; k++) {
            for(int i=0; i<n-k+1; i++) {
                int j = i+k-1;
                if(dp[i+1][j-1] && str[i] == str[j]) {
                    dp[i][j] = true;
                    if(k > maxlen) {
                        start = i;
                        maxlen = k;
                    }
                }
            }
        }
        
        return str.substr(start,maxlen);
    }
};
